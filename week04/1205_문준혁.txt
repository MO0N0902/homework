1. 동물 클래스
package Task;

public class TaskAnimal {
//	1. 동물 클래스를 작성하세요
//	 필드(속성) : '이름', '나이', '종류'라는 필드
//	    - 이름 : 동물의 이름을 저장하는 곳
//	    - 나이 : 동물의 나이를 저장하는 곳
//	    - 종류 : 동물의 종류(개, 고양이, 새 등)를 저장하는 곳
	String name;
	String type;
	int age;
	
	//생성자
	public TaskAnimal(String name, String type, int age) {
		this.name = name;
		this.type = type;
		this.age = age;
	}
	
//	 메서드(행동)
//	    - 밥먹기() : 동물이 밥을 먹는 행동을 하는 메서드
	void eatfood() {
		System.out.println(this.name + "이란 이름을 가진" +this.type +"가 우리에서 밥을 먹고있습니다.");
	}
	
//	    - 놀기() : 동물이 노는 행동을 하는 메서드
	void play() {
		System.out.println(type + "무리가 함께 놀고있습니다.");
	}
	
//	    - 자다() : 동물이 자는 행동을 하는 메서드
	void sleep() {
		System.out.println(name+"("+type+")"+"가 곤히 자고있습니다.");
	}
//	    - 생일축하() : 동물의 생일을 축하하는 메서드
	void birth() {
		System.out.println("오늘은 "+ name+"("+type+")의" + age + "번째 생일입니다!");
	}

	
	
}


2. BasicTv 클래스를 작성하세요
package Task;

import java.util.Scanner;

public class BasicTv {
	TvController tc = new TvController();
//	2. BasicTv 클래스를 작성하세요
//	필드 :
	boolean power; //TV 전원 상태 (기본값: false)
	int channel = 1; //TV 채널 (기본값: 1)
	String color;// TV의 색상
	int size; // TV의 크기
	int price; // TV의 가격

	
//생성자
	public BasicTv() {
		
	
	}
	
	//메서드 : menu(); 컨드롤 메뉴

	void menu() {
		System.out.println(
				"=== TV 컨트롤 메뉴 ===\n" 
				+ "1. 전원 On/Off\n" 
				+ "2. 채널 올리기\n" 
				+ "3. 채널 내리기\n" 
				+ "4. 종료\n" 
				+ "메뉴 번호 입력 :");

		
	}
//	메서드:
//	void powerOnOff() : TV 전원을 켜거나 끄는 메서드
//	      전원이 켜져 있으면 끄고, 꺼져 있으면 켜야 다른 동작이 가능하다
	void powerOnOff() {
		power = !power;
		System.out.println(power? "전원이 켜졌습니다." :"전원이 꺼졌습니다.");
		//삼항연산자 이용해서 power가 true일때 전원이 켜졌습니다 호출
	}
//	void channelUp() : 채널을 1씩 증가시키는 메서드
//    채널 최대값 999
	void channelUp() {
		if(power) {
			System.out.println("현재 채널 : " + channel);
			if(channel < 999) { //999보다 작을때
				channel++; // 1증가
			}else {
				channel = 1; // 채널이 999일때 1로 옮기기
			}
		}else {
			System.out.println("전원이 꺼져있습니다.");
		}
	}
	

//	void channelDown() : 채널을 1씩 감소시키는 메서드
//	      채널 최소값 1
	void channelDown() {
		if(power) {
			System.out.println("현재 채널 : " + channel);
			if(channel > 1 ) { //채널이 1보다 클때 
				channel--; // 1감소
			}else {
				channel = 999; //채널이 1일경우 채널 999로 옮기기 
			}
		}else {
			System.out.println("전원이 꺼져있습니다.");
		}
	}
}

3. BasicTv 클래스와 함께 동작하는 TvController 프로그램을 작성하세요
package Task;

import java.util.Scanner;

public class TvController {
	public static void main(String[] args) {
		// 컨트롤 페이지 출력
		// 변수 지정 : 입력받을 메뉴 숫자
		// 사용자로부터 메뉴 숫자 입력받기
		// while문 사용해서 4번 종료를 누르기 전까지 반복하기
		// case문 사용해서 해당메뉴로 이동하기
		// 메소드 호출하기
		BasicTv bt = new BasicTv();
		Scanner sc = new Scanner(System.in);

		while (true) { // true 일때동안 반복
			bt.menu(); // 메뉴메소드 출력
			int menunum = sc.nextInt(); // 메뉴번호 입력받기
			switch (menunum) { // switch문으로 메뉴 선택하기
			case 1:
				bt.powerOnOff(); // 전원 메소드 호출
				System.out.println();
				break;
			case 2:
				bt.channelUp(); // 채널 증가 메소드 호출
				System.out.println();
				break;
			case 3:
				bt.channelDown(); // 채널 감소 메소드 호출
				System.out.println();
				break;
			case 4:
				System.out.println("프로그램을 종료합니다.");
				System.out.println();
				return;

			default: // 지정된 메뉴번호 외의 번호를 입력했을때 출려
				System.out.println("올바른 메뉴 숫자를 입력해주세요.");
			}

		}

	}// main
}class

4. 교재 p228~p242의 내용 읽고 이해한 대로 작성

1. 생성자
	객체를 생성할때 호출되어 객체의 초기화를 담당
	즉, 객체를 생성할때만 호출 할 수 있음
	**클래스명 객체명 + new 클래스명();**	

1) 기본생성자
	자바 컴파일러가 하나의 클래스가 생성될때 자동으로 제공함
	개발자가 직접 생성자를 선언하면 컴파일러는 자동으로 제공하지 않고 선언된 생성자를 사용

2) 생성자 오버로딩
	하나의 클래스에 여러 생성자를 정의함
	생성자 매개변수의 자료형, 새수, 순서로 생성자를 구분하여 선언할 수 있음
	
2. this
	객체 자기자신!!!
	필드와 지역변수의 이름이 동일할때 구분하기 위해 사용함
	중괄호 안에서도 같은 이름의 매개변수와 필드를 구분해서 사용

1) this()
	잘 모르겠습니다
	매개변수가 2개있는 클래스와
	매개변수가 3개있는 클래스에 겹치는 매개변수가 있을때
	this()로 묶어서 겹치는 매개변수를 하나의 코드로 줄일 수 있다
